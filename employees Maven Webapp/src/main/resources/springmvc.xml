<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.0.xsd
         ">
<!-- 扫描自动注解范围 -->		                  
  <context:component-scan base-package="com.emps.handler">
   <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
  </context:component-scan>
<mvc:annotation-driven  conversion-service="conversionService"/>
<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
   <property name="converters">
      <list>  
      </list>
   </property>
</bean>
 <!--Shiro配置-->
    <!--
        1.配置lifecycleBeanPostProcessor，可以在Spring IOC容器中调用shiro的生命周期方法.
    -->
    <bean class="org.apache.shiro.spring.LifecycleBeanPostProcessor" id="lifecycleBeanPostProcessor" />

    <!--
        2.启用Spring IOC容器Shiro注解，但必须配置了lifecycleBeanPostProcessor后才可以使用
    -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" 
    depends-on="lifecycleBeanPostProcessor">
      <property name="proxyTargetClass" value="true"/>
    </bean>

    <!--
        3.开启Spring AOC Shiro注解支持
    -->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
<!-- shiro异常 -->


<!-- 处理请求时返回json字符串的中文乱码问题,避免IE执行AJAX时，返回json出现下载文件 -->
<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">  
    <property name="messageConverters">  
        <list>  
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">  
                <property name="supportedMediaTypes">  
                    <list>  
                        <value>text/html; charset=UTF-8</value>  
                        <value>application/json;charset=UTF-8</value>  
                    </list>  
                </property>  
            </bean>  
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
                <property name="supportedMediaTypes">  
                    <list>  
                        <value>text/html; charset=UTF-8</value>  
                        <value>application/json;charset=UTF-8</value>  
                    </list>  
                </property>  
            </bean>  
        </list>  
    </property>  
</bean> 
    <context:annotation-config/>
    <mvc:default-servlet-handler/> 
<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
   <property name="order" value="1"></property>
   <property name="prefix" value="/"></property>
   <property name="suffix" value=".jsp"></property>
</bean>




<!-- 设置freeMarker的配置文件路径 -->    
    <bean id="freemarkerConfiguration" class="org.springframework.beans.factory.config.PropertiesFactoryBean">    
        <property name="location" value="classpath:freemarker.properties"/>    
    </bean>  
      
    <!-- 配置freeMarker的模板路径 -->    
    <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">    
        <property name="freemarkerSettings" ref="freemarkerConfiguration"/>    
        <property name="templateLoaderPath">    
            <value>/WEB-INF/ftl/</value>    
        </property>    
    </bean>  
        
    <!-- 配置freeMarker视图解析器 -->    
    <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">    
        <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>    
        <property name="contentType" value="text/html; charset=utf-8"/>    
        <property name="cache" value="true"/>    
    </bean> 
 

</beans>